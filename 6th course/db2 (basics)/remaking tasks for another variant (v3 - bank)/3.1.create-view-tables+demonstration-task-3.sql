-- --------------------- Create view tables for task 3 ------------------------
-- ----------------------------------------------------------------------------

CONNECT TO LABSV3;

-- 1. Создание view-таблицы клиентов с указанным типом вклада
CREATE VIEW VIEW_CLIENT_DETAIL AS
	SELECT CLIENT.ID, CLIENT.FULL_NAME AS CLIENT, 
	CLIENT.CREATION_DATE AS CREATE_DATE, DEPOSIT.NAME AS DEPOSIT 
	FROM DEPOSIT, CLIENT WHERE CLIENT.DEPOSITID = DEPOSIT.ID;

-- Тестовая выборка view-таблицы VIEW_CLIENT_DETAIL
SELECT * FROM VIEW_CLIENT_DETAIL;


-- 2. Создание view-таблицы движений денег с указанными клиентом и операцией
CREATE VIEW VIEW_TRANSFER_DETAIL AS
	SELECT TRANSFER.ID, TRANSFER.TRANSFER_DATE AS DATE, 
	OPERATION.NAME AS OPERATION, CLIENT.FULL_NAME AS CLIENT
	FROM TRANSFER, CLIENT, OPERATION
	WHERE TRANSFER.CLIENTID = CLIENT.ID AND TRANSFER.OPERATIONID = OPERATION.ID;

-- Тестовая выборка view-таблицы VIEW_TRANSFER_DETAIL
SELECT * FROM VIEW_TRANSFER_DETAIL;


-- 3. Создание view-таблицы движений денег за 2015 год с указанными
-- операцией, клиентом и сотрудником
CREATE VIEW VIEW_TRANSFER_FOR_2015 AS
	SELECT TRANSFER.ID, OPERATION.NAME AS OPERATION, 
	TRANSFER.TRANSFER_DATE AS DATE, CLIENT.FULL_NAME AS CLIENT, 
	EMPLOYEE.FULL_NAME AS EMPLOYEE FROM TRANSFER, CLIENT, OPERATION, EMPLOYEE
	WHERE TRANSFER.OPERATIONID = OPERATION.ID AND TRANSFER.CLIENTID = CLIENT.ID
	AND TRANSFER.EMPLOYEEID = EMPLOYEE.ID 
	AND TRANSFER.TRANSFER_DATE BETWEEN '2015-01-01' AND '2015-12-31';

-- Тестовая выборка view-таблицы VIEW_TRANSFER_FOR_2015
SELECT * FROM VIEW_TRANSFER_FOR_2015;


-- 4. Создание view-таблицы закрытий счетов с указанием клиента и даты
CREATE VIEW VIEW_CLOSE_DEPOSIT AS
	SELECT TRANSFER.TRANSFER_DATE AS DATE, CLIENT.ACCOUNT_NUMBER, 
	CLIENT.FULL_NAME AS CLIENT
	FROM TRANSFER, OPERATION, CLIENT
	WHERE TRANSFER.CLIENTID = CLIENT.ID AND TRANSFER.OPERATIONID = 
	(SELECT OPERATION.ID FROM OPERATION WHERE OPERATION.NAME = 'Закрытие')
	GROUP BY CLIENT.FULL_NAME, TRANSFER.TRANSFER_DATE, CLIENT.ACCOUNT_NUMBER;

-- Тестовая выборка view-таблицы VIEW_CLOSE_DEPOSIT
SELECT * FROM VIEW_CLOSE_DEPOSIT;


-- 5. Создание view-таблицы клиентов с указанием количества операций для каждого
CREATE VIEW VIEW_CLIENT_COUNT_OPERATION AS
	SELECT TRANSFER.CLIENTID AS ID, CLIENT.FULL_NAME AS CLIENT, 
	COUNT(TRANSFER.CLIENTID) AS COUNT_OPERATION
	FROM TRANSFER JOIN CLIENT ON CLIENT.ID = TRANSFER.CLIENTID 
	GROUP BY TRANSFER.CLIENTID, CLIENT.FULL_NAME;

-- Тестовая выборка view-таблицы VIEW_CLIENT_COUNT_OPERATION
SELECT * FROM VIEW_CLIENT_COUNT_OPERATION;

CONNECT RESET;
